name: modular_flutter_workspace

workspace:
  - packages/modular_core
  - packages/modular_flutter
  - packages/viewmodel

environment:
  sdk: ">=3.8.1 <4.0.0"

dev_dependencies:
  melos: ^7.0.0-dev.9

melos:
  scripts:
    # Setup environment files for CI/CD
    setup:
      description: Setup environment files for CI/CD
      run: |
        if [ ! -f example/.env ]; then
          echo "# Environment variables for example app" > example/.env
          echo "# Add your environment specific variables here" >> example/.env
          echo "" >> example/.env
          echo "# API Configuration" >> example/.env
          echo "# API_URL=https://api.example.com" >> example/.env
          echo "# API_KEY=your_api_key_here" >> example/.env
          echo "" >> example/.env
          echo "# App Configuration" >> example/.env
          echo "# APP_NAME=Example App" >> example/.env
          echo "# DEBUG_MODE=true" >> example/.env
          echo "Created example/.env file"
        else
          echo "example/.env already exists"
        fi

    # Generate code (freezed, json_serializable)
    generate:
      description: Generate code for all packages using build_runner
      run: dart run build_runner build --delete-conflicting-outputs
      packageFilters:
        dependsOn: "build_runner"

    # Watch for changes and generate code
    generate:watch:
      description: Watch for changes and generate code
      run: dart run build_runner watch --delete-conflicting-outputs
      packageFilters:
        dependsOn: "build_runner"

    # Run tests for all packages
    test:
      description: Run tests for all packages
      steps:
        - melos run setup
        - melos exec --concurrency=1 --fail-fast -- flutter test
      packageFilters:
        dirExists: "test"
        flutter: true

    # Format code for all packages
    format:
      description: Format code for all packages
      run: dart format . --set-exit-if-changed

    # Analyze code for all packages
    analyze:
      description: Analyze code for all packages
      steps:
        - melos run setup
        - dart analyze

    # Clean all packages
    clean:
      description: Clean all packages
      run: flutter clean
      packageFilters:
        flutter: true

    # Get dependencies for all packages
    get:
      description: Get dependencies for all packages
      run: dart pub get

    # Check for outdated dependencies
    outdated:
      description: Check for outdated dependencies
      run: dart pub outdated
